# -*- auto-fill-function: nil; eval: (add-hook 'after-save-hook 'org-babel-tangle nil t); -*-

So, we're learning Web Dev.
Well, at least /I/ am!

Let's make it easier and more fun with Literate Programming in Org Mode.

Starting from the fundamentals.
Web pages are all about navigating through content.
To make things easier, we have:
- HTML, for /structure/;
- CSS, for /style/;
- Javascript, for /logic/.


A minimal html page [[https://html.spec.whatwg.org/multipage/syntax.html?utm_source=chatgpt.com#writing][must have]]:

#+begin_src html
<!DOCTYPE html>
<html>
</html>
#+end_src

Here:
- ~<!DOCTYPE html>~ is the /Document Type Declaration/; it tells the browser the specifications that the page follows.
- ~<html>~ and ~</html>~ enclose the page itself.

The fundamental element of a web page is... well, an =element=.
By definition, an =element= is composed by (example inside the parentheses):
- opening tag (~<html>~);
- everything in between (called /content/);
- closing tag (~</html>~).

The page is made of a /sequence of elements/.

Some elements may be /empty/: they don't have a closing tag.
Example: ~<!DOCTYPE html>~.

A /cool/ first web page would be:

[[file:hello-world.html][hello-world.html]] ≡

#+begin_src html :tangle hello-world.html
<!DOCTYPE html>
<html>
  <p>Hello, World!</p>
</html>
#+end_src

*Note*: Here the /contents/ of the =element= ~<p>~ are "Hello, world!".

The ~<html>~ element contains all the elements of the whole page.
Only two tags should be immediately inside it: ~<head>~ and ~<body>~.
~<head>~ contains /metadata/; more about this below.
~<body>~ contains all the /visible/ elements of the page.

Then, each element of the page is either inside ~<head>~ or ~<body>~.
This is illustrated below.

#+begin_src
<html>
|
+- <head>
|
+- <body>
#+end_src

To help make things more clear, we'll call
- /Document/: the ~<!DOCTYPE>~ and ~<head>~ elements, and
- /Page/: the ~<body>~ element.


For instance: ~hello-world.html~ contains the whole /document/.
When we open it on a browser, we see the (obviously /visible/) /page/, which is inside ~<body>~.

Let's then fix our first page!
It had a ~<p>~ element immediately inside ~<html>~, which is against the specs.
It must be inside ~<body>~.

We also have to add a ~<head>~ inside ~<html>~.
We could leave it empty, but that's not cool.
We'll put a ~<title>~ inside it.
~<title>~ is the /page/ title, that appears as the "name" of the browser window or the page's tab in the browser.

[[file:hello-world-fixed.html][hello-world-fixed.html]] ≡

#+begin_src html :tangle hello-world-fixed.html
<!DOCTYPE html>
<html>
  <head>
    <title>My first fixed page</title>
  </head>
  <body>
    <p>Hello, World!</p>
  </body>
</html>
#+end_src

If you open both ~hello-world.html~ and ~hello-world-fixed.html~, you'll see that they look the same.
This shows how /forgiving/ HTML is.
It really tries to help us get there.
Good on you, HTML!

To help organizing paragraphs, we have /headings/.
They give us /six/ of them: ~<h1>~ to ~<h6>~.

[[file:headings.html][headings.html]] ≡

#+begin_src html :tangle headings.html
<!DOCTYPE html>
<html>
  <head>
    <title>Guess who my favorite was?</title>
  </head>
  <body>
    <h1>S.H.I.E.L.D. Team</h1>
    <h2>Nick Fury</h2>
    <p>Leading S.H.I.E.L.D. with an iron will and one eye on the bigger picture. He always anticipates threats before they happen. His presence commands respect across the superhero community. Nothing slips past his watchful eye.</p>

    <h2>Phil Coulson</h2>
    <p>The calm in the storm, proving loyalty is a superpower. Coulson bridges heroes and humans with tact and understanding. He carries a quiet strength that inspires trust. Even in chaos, his steady hand guides the team.</p>
    <h2>Maria Hill</h2>
    <p>Strategic, precise, and always ready for action. Hill can handle the toughest missions with clarity and focus. Her decisiveness keeps S.H.I.E.L.D. running smoothly. She never hesitates when lives are on the line.</p>
    <h2>Melinda May</h2>
    <p>The Cavalry—silent, deadly, and unstoppable. May’s combat skills are unmatched in the field. Beneath her stoic exterior lies fierce loyalty to her team. Every mission she undertakes is executed with perfection.</p>

    <h2>Leopold Fitz</h2>
    <p>Brains behind the tech, making the impossible possible. Fitz’s inventions often turn the tide in dire situations. His curiosity drives constant innovation. Even under pressure, his intellect shines brilliantly.</p>

    <h2>Skye</h2>
    <h3>Hacker</h3>
    <p>Skye starts out as a brilliant hacker, using her skills to uncover secrets and fight for justice from the shadows. Her curiosity and determination make her a force to be reckoned with. Even before joining S.H.I.E.L.D., she proves she can challenge the system.</p>

    <h3>Agent</h3>
    <p>Joining S.H.I.E.L.D., Skye becomes a trained field agent, learning to balance her intellect with physical skill. She adapts quickly to missions, proving her value to the team. Her loyalty and resourcefulness grow stronger with every challenge.</p>

    <h3>Daughter</h3>
    <p>Skye discovers her true identity as Daisy Johnson, the daughter of a powerful Inhuman. This revelation reshapes her understanding of herself and her powers. She struggles but ultimately embraces her heritage, gaining confidence and purpose.</p>

    <h3>Leader</h3>
    <p>Over time, Skye evolves into a capable leader, guiding missions and protecting her team. Her experience as both an outsider and a hero gives her unique insight. She inspires others through courage, empathy, and decisiveness.</p>

    <h3>Quake</h3>
    <p>Fully embracing her abilities, Skye becomes Quake, wielding seismic powers to combat threats. She balances heroism with personal growth, using her strength to defend the world. Quake is the culmination of her journey, symbolizing resilience, power, and identity.</p>
  </body>
</html>
#+end_src

Interesting to note that the paragraphs inside a heading are *not* nested inside it.

Now comes the ~<br>~ element.
It forces a line break in the text.
It is an /empty/ element, meaning it has no content.
This implies it does *not* need nor have and end tag.

In the example below, the poem has two versions: in the first one, the line breaks are only in the source code, and the second version forces them with ~<br>~.
Only the second one gets the expected result (well, at least on a big screen).

[[file:br.html][br.html]] ≡

#+begin_src html :tangle br.html
<!DOCTYPE html>
<html>
  <head>
    <title>br, but not for Brazil</title>
  </head>
  <body>
    <p>He-Man stands tall, sword held high,
      Shadows flee where his heroes fly.
      In Eternia’s heart, he lights the night,
      Strength and courage his endless might.</p>

    <p>He-Man stands tall, sword held high,<br>
      Shadows flee where his heroes fly.<br>
      In Eternia’s heart, he lights the night,<br>
      Strength and courage his endless might.</p>
  </body>
</html>
#+end_src
